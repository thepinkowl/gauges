{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","webpack:///src/app/models/Task.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/tasks.service.ts"],"names":["attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","closest","createColorClasses","color","length","undefined","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","ev","direction","test","router","document","querySelector","preventDefault","push","TaskInterface","Task","task","computeProgress","executions","sort","a","b","getTime","lastDone","lastDoneDuration","today","progress","rangePercentage","floor","WEEK","value","min","max","tasks","t","title","id","when","Date","now","NotificationsService","toastController","message","duration","create","toast","present","tasksService","buttons","side","text","handler","updateTask","providedIn","todayInMs","dayInMs","defaultTasks","TasksService","notifs","localStorageKey","loaded","loadTasks","then","next","parseTasks","getValue","find","indexOf","removedTasks","splice","removedTask","persistTasksInDb","showUndoDeletedTask","doesTaskExist","createTask","biggestId","reduce","acc","parseInt","toString","loadTasksFromDb","localStorage","setItem","JSON","stringify","fromDB","getItem","parsed","parse","e"],"mappings":"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","file":"common-es5.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export class TaskInterface {\n    id: string;\n    title: string;\n    when: number[];\n    executions: Date[];\n}\n\nexport default class Task extends TaskInterface {\n    static today = Date.now();\n    static WEEK = 7 * 24 * 60 * 60 * 1000;\n\n    lastDone: Date;\n    progress: number;\n\n    static parseTasks(tasks: TaskInterface[]): Task[] {\n        return tasks.map((t: TaskInterface) => new Task(t));\n    }\n\n    static createEmpty(): Task {\n        return new Task({\n            title: '',\n            id: '',\n            when: [],\n            executions: [new Date()],\n        });\n    }\n\n    constructor(task: TaskInterface) {\n        super();\n        Object.assign(this, task);\n        this.computeProgress();\n    }\n\n    public computeProgress() {\n        this.executions.sort((a: Date, b: Date) => (b.getTime() - a.getTime()));\n        this.lastDone = this.executions[0];\n        const lastDoneDuration = (Task.today - this.lastDone.getTime());\n        this.progress = this.rangePercentage(Math.floor( (Task.WEEK - lastDoneDuration) / Task.WEEK * 100));\n    }\n\n    private rangePercentage(value: number, min = 0, max = 100) {\n        return Math.min(Math.max(value, min), max);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { TasksService } from './tasks.service';\nimport Task from '../models/Task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  constructor(\n    private toastController: ToastController\n  ) { }\n\n  async showToast(message: string, duration: number = 2000) {\n    const toast = await this.toastController.create({\n      message,\n      duration\n    });\n    toast.present();\n  }\n\n  async showUndoDeletedTask(tasksService: TasksService, task: Task) {\n    const toast = await this.toastController.create({\n      message: `\"${task.title}\" has been removed.`,\n      buttons: [\n        {\n          side: 'end',\n          text: 'Undo',\n          handler: () => !!tasksService.updateTask(task)\n        }\n      ],\n      duration: 3000\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport Task, { TaskInterface } from '../models/Task';\nimport { NotificationsService } from './notifications.service';\n\nconst todayInMs = Date.now();\nconst dayInMs = 1000 * 60 * 60 * 24;\nconst defaultTasks: TaskInterface[] = [\n  {\n    title: 'Laundry',\n    when: [1, 3],\n    executions: [\n      new Date(todayInMs - 1 * dayInMs),\n      new Date(todayInMs - 10 * dayInMs),\n    ],\n    id: '0',\n  },\n  {\n    title: 'Hoovering',\n    when: [0, 1, 3],\n    executions: [new Date(todayInMs - 10 * dayInMs)],\n    id: '2',\n  },\n  {\n    title: 'Gardening',\n    when: [0, 1, 2],\n    executions: [new Date(todayInMs - 4 * dayInMs)],\n    id: '1',\n  },\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TasksService {\n  constructor(private notifs: NotificationsService) {\n    this.loaded = new Promise((resolve) => {\n      this.loadTasks().then((tasks) => {\n        this.tasks.next(Task.parseTasks(tasks));\n        resolve(true);\n      });\n    });\n  }\n\n  private tasks: BehaviorSubject<Task[]> = new BehaviorSubject([]);\n  private loaded: Promise<boolean>;\n\n  private localStorageKey = 'tasks';\n\n  public getTasks(): Observable<Task[]> {\n    return this.tasks;\n  }\n\n  public async getTaskById(id: string): Promise<Task> {\n    await this.loaded;\n    return this.tasks.getValue().find((t) => t.id === id);\n  }\n\n  public async deleteTask(task: Task) {\n    const tasks = this.tasks.getValue();\n    const index = tasks.indexOf(task);\n    if (index < 0) {\n      throw Error('Task does not exist');\n    }\n    const removedTasks = tasks.splice(index, 1);\n    if (removedTasks.length === 0) {\n      throw Error('Cannot delete task');\n    }\n    const removedTask = removedTasks[0];\n    this.tasks.next([...tasks]);\n    await this.persistTasksInDb();\n    this.notifs.showUndoDeletedTask(this, removedTask);\n  }\n\n  public async createOrUpdateTask(task: Task) {\n    const doesTaskExist =\n      !!task.id && !!this.tasks.getValue().find((t: Task) => t.id === task.id);\n    if (!doesTaskExist) {\n      return await this.createTask(task);\n    }\n    return await this.updateTask(task);\n  }\n\n  public async createTask(task: Task) {\n    const biggestId = this.tasks\n      .getValue()\n      .reduce(\n        (acc: number, t: Task) =>\n          parseInt(t.id, 16) > acc ? parseInt(t.id, 16) : acc,\n        0\n      );\n    task.id = (biggestId + 1).toString(16);\n    // TODO: should we copy or just push instead?\n    this.tasks.next([...this.tasks.getValue(), task]);\n    await this.persistTasksInDb();\n    return task;\n  }\n\n  public async updateTask(task: Task) {\n    this.tasks.next([\n      ...this.tasks.getValue().filter((t) => t.id !== task.id),\n      task,\n    ]);\n    await this.persistTasksInDb();\n    return task;\n  }\n\n  public async markTaskDone(task: Task) {\n    task.executions.push(new Date());\n    task.computeProgress();\n    await this.updateTask(task);\n  }\n\n  private async loadTasks() {\n    return await this.loadTasksFromDb() || [];\n    // return [...defaultTasks];\n  }\n\n  private async persistTasksInDb() {\n    localStorage.setItem(\n      this.localStorageKey,\n      JSON.stringify(this.tasks.getValue())\n    );\n  }\n\n  private async loadTasksFromDb() {\n    const fromDB = localStorage.getItem(this.localStorageKey);\n    if (!fromDB) {\n      return undefined;\n    }\n    const parsed = JSON.parse(fromDB) as Task[];\n    parsed.forEach((task: Task) => {\n      task.executions = task.executions.map((e) => new Date(e));\n    });\n    return parsed;\n  }\n}\n"]}